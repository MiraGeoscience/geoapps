[tool.poetry]
name = "geoapps"
version = "0.11.0-rc.2"
description = "Open-sourced Applications in Geoscience"
authors = ["Mira Geoscience <dominiquef@mirageoscience.com>"]
repository = "https://github.com/MiraGeoscience/geoapps"
documentation = "https://geoapps.readthedocs.io/en/latest/"
homepage = "https://mirageoscience.com"
readme = "README.rst"

packages = [
    { include = "geoapps" },
    { include = "geoapps-assets" },
]
exclude = [
    "geoapps-assets/**/*.geoh5",
    "geoapps-assets/uijson/**",
]

keywords = ["geology", "geophysics", "earth sciences"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Natural Language :: English",
]

[tool.poetry.scripts]
start_notebook = { callable = "geoapps.scripts.start_notebook:main", extras = ["apps"] }

[tool.poetry.dependencies]
python = "^3.9, < 3.11"

## dependencies for a minimal environment
numpy = "~1.23.5"  # also geoh5py, simpeg and geoana
geoh5py = {version = "~0.8.0rc3", source = "pypi", allow-prereleases = true}
#geoh5py = {url = "https://github.com/MiraGeoscience/geoh5py/archive/refs/tags/v0.8.0-rc.2.zip#sha256="}
param-sweeps = {version = "~0.1.6a1", source = "pypi", allow-prereleases = true}
#param-sweeps = {url = "https://github.com/MiraGeoscience/param-sweeps/archive/refs/heads/develop.zip#sha256="}
scipy = {version = "~1.10.1"}  # also in simpeg and geoana
semver = {version="~3.0.0"}

## dependencies for core algorithms
dask = {version = "2022.10.*", extras = ["distributed"]}
discretize = "~0.10.0"  # also in simpeg
distributed = "2022.10.*"  # because conda-lock doesn't take dask extras into account
fiona = "~1.9.2"
fsspec = "2022.*"  # also in simpeg
gdal = "~3.6.3"
matplotlib = "~3.7.1"  # also in simpeg and geoana
pandas = "~1.5.3"  # also in simpeg
scikit-learn = "~1.2.2"  # also in simpeg
tqdm = "^4.64.0"  # also in las-geoh5

#simpeg-archive = {url = "https://github.com/MiraGeoscience/simpeg/archive/refs/heads/feature/simpeg_archive.zip#sha256="}
simpeg-archive = {version = "~0.11.0.dev6", source = "pypi"}
#mira-simpeg = {url = "https://github.com/MiraGeoscience/simpeg/archive/refs/heads/release/v0.19.0.dev3+geoapps.0.11.0.zip#sha256=", optional = true}
mira-simpeg = {version = "~0.19.0.dev4", source = "pypi"}

## indirect dependencies, forcing them here for installation through Conda not pip
empymod = "~2.2.1"  # from simpeg and geoana
geoana = "~0.4.0"  # from simpeg
h5py = "^3.2.1"  # from geoh5py
mkl = "2022.*"  # from simpeg
Pillow = "^10.0.1"  # from geoh5py
properties = "~0.6.0"  # from omf
pydiso = "~0.0.3"  # from simpeg
pymatsolver = "~0.2.0"  # from simpeg
pypng = "^0.20220715"  # from omf
scikit-image = "~0.19.2"
six = "^1.16"  # from omf
vectormath = "~0.2.0"  # from omf
zarr = "~2.14.2"  # from simpeg using Dask

## dependencies for UI
ipyfilechooser = {version = "~0.6.0", optional = true}
ipywidgets = {version = "^7.6.5", optional = true}
plotly = {version = "~5.13.1", optional = true}
pyqtwebengine = {version = "~5.15", optional = true}
pyside2 = {version = "~5.15", optional = true}
dash-daq = {version = "~0.5.0", optional = true}

## optional dependencies for I/O
las-geoh5 = { version = "~0.1.0", source = "pypi", allow-prereleases = true, optional = true}
#las-geoh5 = {url = "https://github.com/MiraGeoscience/las-geoh5/archive/refs/heads/GEOPY-1130.zip#sha256=", optional = true}
mira-omf = {version = "~3.1.0a1", source = "pypi", allow-prereleases = true, optional = true}
#mira-omf = {url = "https://github.com/MiraGeoscience/omf/archive/refs/heads/develop.zip#sha256=", optional = true}

## about pip dependencies
# to be specified to work with conda-lock
# - from PyPI: my_package = { version = "1.2.3", source = "pypi" }
# - from URL:
#   - for a tags:   my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/tags/VERSION_TAG.zip#sha256=" }
#   - for a branch: my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/heads/BRANCH.zip#sha256=" }
# Note - conda-lock does not support the syntax: my_package = { git = ... }
#        while poetry2conda supports only { git = "...", tag = "..." }, and not { url = ... }


[tool.poetry.group.dev.dependencies]
pylint = "*"
pytest = "*"
pytest-cov = "*"
toml = "*" # for tests only

[tool.poetry.extras]
# extras for I/O
io = [
    "las-geoh5",
    "mira-omf",
]

# extras for apps user interface
ui = [
    "dash-daq",
    "ipyfilechooser",
    "ipywidgets",
    "plotly",
    "pyqtwebengine",
    "pyside2",
]

[tool.conda-lock]
platforms = ['win-64', 'osx-64', 'linux-64']
channels = ['conda-forge']

[tool.conda-lock.dependencies]
libblas = "*=*mkl"

[tool.isort]
# settings for compatibility between ``isort`` and ``black`` formatting
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
# defaults are just fine

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
