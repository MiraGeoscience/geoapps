[tool.poetry]
name = "geoapps"
version = "0.9.0-alpha.1"
description = "Open-sourced Applications in Geoscience"
authors = ["Mira Geoscience <dominiquef@mirageoscience.com>"]
repository = "https://github.com/MiraGeoscience/geoapps"
documentation = "https://geoapps.readthedocs.io/en/latest/"
homepage = "https://mirageoscience.com"
readme = "README.md"
keywords = ["geology", "geophysics", "earth sciences"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Natural Language :: English",
]

[tool.poetry.dependencies]
python = "^3.7"

dask = {version = "2022.*", extras = ["distributed"]}
distributed = "2022.*"
discretize = "~0.7.4" # also in simpeg
fsspec = "2022.*" # also in simpeg
matplotlib = "^3.5.1" # also in simpeg and geoana
numpy = "!=1.19.4, ^1.21.5" # also in simpeg and geoana
pandas = "^1.3.5" # also in simpeg
scikit-learn = "^1.0.2" # also in simpeg
scipy = "^1.7.3" # also in simpeg and geoana
tqdm = "^4.64.0"

## "soft" dependencies
fiona = {version = "^1.8.21", optional = true}
gdal = {version = "^3.5.1", optional = true}
ipyfilechooser = {version = "~0.6.0", optional = true}
ipywidgets = {version = "^7.6.5", optional = true}
plotly = {version = "^5.8.0", optional = true}
scikit-image = {version = "~0.19.2", optional = true}
jupyter-dash = {version = "^0.4.2", optional = true}
dash-daq = {version = "^0.5.0", optional = true}

## indirect dependencies, forcing them here for installation through Conda not pip
empymod = "^2.1.3" # from simpeg and geoana
geoana = "~0.0.6" # from simpeg
h5py = "^3.2.1" # from geoh5py
mkl = "2022.*" # from simpeg
properties = "~0.6.1" # from simpeg and geoana
pydiso = "~0.0.3" # from simpeg
pymatsolver = "~0.2.0" # from simpeg
utm = "~0.7.0"
zarr = "^2.8.1" # from simpgeg using Dask

## pip dependencies
# to be specified to work with conda-lock
# - from PyPI: my_package = { version = "1.2.3", source = "pypi" }
# - from URL:
#   - for a tags: my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/tags/VERSION_TAG.zip#sha256=None" }
#   - for a branch: my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/heads/BRANCH.zip#sha256=None" }
# Note - conda-lock does not support the syntaxe: my_package = { git = ... }
#        while poetry2conda supports only { git = "...", tag = "..." }, and not { url = ... }
geoh5py = { url = "https://github.com/MiraGeoscience/geoh5py/archive/refs/tags/v0.4.0.tar.gz#sha256=b71aee6fe66787fe65021ebadb224dd2154a975fe352ed1b43e3e31c4808f704" }
#geoh5py = { git = "https://github.com/MiraGeoscience/geoh5py.git", tag="branch_or_tag" }
simpeg_archive = { url = "https://github.com/MiraGeoscience/simpeg/archive/refs/tags/v0.9.1.dev4+geoapps.0.8.0.tar.gz#sha256=4aab03957c20d21235996796072a3e28fd0745524c44dfd911689d1cc7752725" }
#simpeg_archive = { git = "https://github.com/sebhmg/simpeg.git", tag="branch_or_tag" }
simpeg = { url = "https://github.com/MiraGeoscience/simpeg/archive/refs/heads/GEOPY-641.tar.gz#sha256=None", extras = ["dask"] }
#simpeg = { git = "https://github.com/sebhmg/simpeg.git", tag="branch_or_tag", extras = ["dask"] }

[tool.poetry.dev-dependencies]
pylint = "^2.14.4"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
requests = "^2.27.1" # for tests only

[tool.poetry.extras]
full = [
    "fiona",
    "gdal",
    "ipyfilechooser",
    "ipywidgets",
    "plotly",
    "scikit-image",
    "jupyter-dash",
    "dash-daq"
]

[tool.conda-lock]
platforms = ['win-64', 'osx-64', 'linux-64']
channels = ['conda-forge', 'defaults']

[tool.conda-lock.dependencies]
libblas = "*=*mkl"

[tool.isort]
# settings for compatibility between ``isort`` and ``black`` formatting
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
# defaults are just fine

[tool.poetry2conda]
name = "geoapps"
## usage of poetry2conda
# As poetry2conda does not support url sources for pip dependencies,
# temporarily edit this file and use git sources instead, with 'tag=' indifferently whether it is actually a branch or rev.
#> poetry2conda pyproject.toml -E full environment.yml
#> poetry2conda pyproject.toml -E full --dev environment-dev.yml

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
