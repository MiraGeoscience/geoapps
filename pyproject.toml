[tool.poetry]
name = "geoapps"
version = "0.11.0-alpha.1"
description = "Open-sourced Applications in Geoscience"
authors = ["Mira Geoscience <dominiquef@mirageoscience.com>"]
repository = "https://github.com/MiraGeoscience/geoapps"
documentation = "https://geoapps.readthedocs.io/en/latest/"
homepage = "https://mirageoscience.com"
readme = "README.rst"

packages = [
    { include = "geoapps" },
    { include = "geoapps-assets" },
]
exclude = [
    "geoapps-assets/**/*.geoh5",
    "geoapps-assets/uijson/**",
]

keywords = ["geology", "geophysics", "earth sciences"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Natural Language :: English",
]

[tool.poetry.scripts]
start_notebook = { callable = "geoapps.scripts.start_notebook:main", extras = ["apps"] }

[tool.poetry.dependencies]
python = "^3.9, < 3.11"

## dependencies for a minimal environment
numpy = "~1.23.5" # also geoh5py, simpeg and geoana

geoh5py = {version = "~0.8.0a2.dev1", source = "pypi", allow-prereleases = true}
#geoh5py = {url = "https://github.com/MiraGeoscience/geoh5py/archive/refs/heads/develop.zip#sha256="}
mira-omf = {version = "~3.0.0", source = "pypi", allow-prereleases = true}
#mira-omf = {url = "https://github.com/MiraGeoscience/omf/archive/refs/heads/develop.zip#sha256="}
#param-sweeps = {version = "~0.1.6a1", source = "pypi", allow-prereleases = true}
#param-sweeps = {url = "https://github.com/MiraGeoscience/param-sweeps/archive/refs/heads/develop.zip#sha256="}
param-sweeps = {url = "https://github.com/sebhmg/param-sweeps/archive/refs/heads/GEOPY-947.zip#sha256="}

## dependencies for core algorithms
dask = {version = "2022.10.0", extras = ["distributed"], optional = true}
discretize = {version = "~0.7.4", optional = true } # also in simpeg
distributed = {version = "2022.10.0", optional = true}
fsspec = {version = "2022.*", optional = true } # also in simpeg
matplotlib = {version = "~3.7.1", optional = true } # also in simpeg and geoana
pandas = {version = "~1.5.3", optional = true } # also in simpeg
scikit-learn = {version = "~1.2.2", optional = true } # also in simpeg
scipy = {version = "~1.10.1", optional = true } # also in simpeg and geoana
tqdm = {version = "^4.64.0", optional = true }

simpeg_archive = {version = "~0.9.1.dev5", source = "pypi", optional = true}
#mira-simpeg = {version = "~0.15.1.dev9", source = "pypi", optional = true}
mira-simpeg = {url = "https://github.com/MiraGeoscience/simpeg/archive/refs/heads/release/v0.15.1.dev10+geoapps.0.10.0.zip#sha256=", optional = true}

## indirect dependencies, forcing them here for installation through Conda not pip
empymod = {version = "~2.2.1", optional = true} # from simpeg and geoana
geoana = {version = "~0.0.6", optional = true} # from simpeg
h5py = "~3.8.0" # from geoh5py
mkl = {version = "2022.*", optional = true} # from simpeg
Pillow = "~9.4.0" # from geoh5py
properties = "~0.6.1" # from omf, simpeg and geoana
pydiso = {version = "~0.0.3", optional = true} # from simpeg
pymatsolver = {version = "~0.2.0", optional = true} # from simpeg
pypng = "*" # from omf
six = "~1.16.0" # from omf
utm = "~0.7.0"
vectormath = "~0.2.2" # from omf
zarr = {version = "~2.14.2", optional = true} # from simpgeg using Dask

## dependencies for UI
fiona = {version = "~1.9.2", optional = true}
gdal = {version = "~3.6.3", optional = true}
ipyfilechooser = {version = "~0.6.0", optional = true}
ipywidgets = {version = "^7.6.5", optional = true}
plotly = {version = "~5.13.1", optional = true}
scikit-image = {version = "~0.19.2", optional = true}
jupyter-dash = {version = "~0.4.2", optional = true}
dash-daq = {version = "~0.5.0", optional = true}

## about pip dependencies
# to be specified to work with conda-lock
# - from PyPI: my_package = { version = "1.2.3", source = "pypi" }
# - from URL:
#   - for a tags: my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/tags/VERSION_TAG.zip#sha256=" }
#   - for a branch: my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/heads/BRANCH.zip#sha256=" }
# Note - conda-lock does not support the syntax: my_package = { git = ... }
#        while poetry2conda supports only { git = "...", tag = "..." }, and not { url = ... }


[tool.poetry.group.dev.dependencies]
pylint = "*"
pytest = "*"
pytest-cov = "*"
toml = "*" # for tests only

[tool.poetry.extras]
core = [
    "dask",
    "discretize",
    "distributed",
    "empymod",
    "fsspec",
    "geoana",
    "matplotlib",
    "mira-simpeg",
    "mkl",
    "pandas",
    "pydiso",
    "pymatsolver",
    "scikit-learn",
    "scipy",
    "simpeg_archive",
    "tqdm",
    "zarr",
]

# extras for apps user interface
apps = [
    # should include "core", but need non-overlapping extra lists for conda-lock
    "dash-daq",
    "fiona",
    "gdal",
    "ipyfilechooser",
    "ipywidgets",
    "jupyter-dash",
    "plotly",
    "scikit-image",
]

[tool.conda-lock]
platforms = ['win-64', 'osx-64', 'linux-64']
channels = ['conda-forge']

[tool.conda-lock.dependencies]
libblas = "*=*mkl"

[tool.isort]
# settings for compatibility between ``isort`` and ``black`` formatting
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
# defaults are just fine

[tool.poetry2conda]
name = "geoapps"
## usage of poetry2conda
# As poetry2conda does not support url sources for pip dependencies,
# temporarily edit this file and use git sources instead, with 'tag=' indifferently whether it is actually a branch or rev.
#> poetry2conda pyproject.toml -E full environment.yml
#> poetry2conda pyproject.toml -E full --dev environment-dev.yml

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
