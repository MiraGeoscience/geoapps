import datetime
import json
import os

fName = os.path.realpath(__file__)
# info_list = ['title', 'date', 'author', 'url', 'pdf', 'jupyter']
pdf_root = "https://storage.googleapis.com/simpeg/eosc350lectures/"
jupyter_root = "http://mybinder.org/repo/ubcgif/gpgLabs/notebooks/"
youtube_channel = "https://www.youtube.com/c/geoscixyz"

lecture_path = "content/appendix/"

THIS_IS_AUTOGENERATED = (
    ".. --------------------------------- ..\n"
    "..                                   ..\n"
    "..    THIS FILE IS AUTO GENEREATED   ..\n"
    "..                                   ..\n"
    "..    autodoc.py                     ..\n"
    "..                                   ..\n"
    ".. --------------------------------- ..\n"
)


def make_lectures_page(fpath=None, fout=None):

    if fpath is None:
        fpath = lecture_path + "lectures.json"

    if fout is None:
        fout = lecture_path + "lectures.rst"

    fpath = os.path.sep.join(fName.split(os.path.sep)[:-2] + [fpath])
    fout = os.path.sep.join(fName.split(os.path.sep)[:-2] + [fout])

    fpath = open(fpath)  # file to write to
    lectures = json.load(fpath)  # lecture json

    out = """.. _lectures:

{}


Lectures
========


""".format(
        THIS_IS_AUTOGENERATED
    )

    print("\nCreating: lectures.rst")
    f = open(fout, "w")
    f.write(out)

    for key in range(len(lectures.keys())):  # assumes keys are ints
        lecture = lectures[f"{key}"]
        print(f"   writing lecture {key}")
        date = list(map(int, lecture["date"].split("-")))
        date = datetime.date(year=date[0], month=date[1], day=date[2])

        if "pdf" in lecture.keys():
            pdf_name = lecture["pdf"].split(".")[0].split(os.path.sep)[-1]
            if "_" in pdf_name:
                pdf_name = " ".join(pdf_name.split("_")[1:])
            lecture_slides = """
- `{title} lecture slides <{pdf}>`_
            """.format(
                title=pdf_name, pdf=pdf_root + lecture["pdf"]
            )
        else:
            lecture_slides = ""

        if "jupyter" in lecture.keys():
            jupyter = """
- `Jupyter notebook: {name} <{notebook}>`_
            """.format(
                name=lecture["jupyter"].split("/")[-1],
                notebook=jupyter_root + lecture["jupyter"],
            )
        else:
            jupyter = ""

        if "app" in lecture.keys():
            app = """
- `App <{app}>`_
            """.format(
                app=lecture["app"]
            )
        else:
            app = ""

        info_block = """
*{0:%B} {0:%d}, {0:%Y}*

{lecture_slides}
{jupyter}
{app}
        """.format(
            date, lecture_slides=lecture_slides, jupyter=jupyter, app=app
        )

        youtube_block = """
.. raw:: html

    <div style="margin-top:10px; margin-bottom:20px;" align="center">
    <iframe width="560" height="315" src="{url}" frameborder="0" allowfullscreen>
    </iframe>
    </div>


        """.format(
            url="https://www.youtube.com/embed/" + lecture["youtube"] + "?rel=0"
        )

        out = """
.. _lecture_{lecture_id}:

{name}
{underline}

{info_block}

{youtube_block}

        """.format(
            lecture_id=key,
            name=lecture["title"],
            underline=len(lecture["title"]) * "-",
            info_block=info_block,
            youtube_block=youtube_block,
        )
        f.write(out)

    f.close()

    print("Done writing lectures.rst\n")


if __name__ == "__main__":
    """
        Run the following to create the lecture page.
    """

    make_lectures_page()
